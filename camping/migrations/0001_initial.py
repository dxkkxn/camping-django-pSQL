# Generated by Django 3.1.4 on 2020-12-12 19:02

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CafeBar',
            fields=[
                ('ref_conso', models.AutoField(primary_key=True, serialize=False)),
                ('nom_conso', models.CharField(max_length=30)),
                ('prix_conso', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
            options={
                'db_table': 'cafe_bar',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('num_client', models.AutoField(primary_key=True, serialize=False)),
                ('nom_client', models.CharField(max_length=30)),
                ('prenom_client', models.CharField(max_length=30)),
                ('adresse', models.CharField(max_length=50)),
                ('telephone', models.IntegerField()),
                ('date_de_naissance', models.DateField()),
            ],
            options={
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='ClientCafeBar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'client_cafe_bar',
            },
        ),
        migrations.CreateModel(
            name='ClientKaraoke',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'client_karaoke',
            },
        ),
        migrations.CreateModel(
            name='ClientProduitSuperette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'client_produit_superette',
            },
        ),
        migrations.CreateModel(
            name='ClientSalleDesJeux',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'client_salle_des_jeux',
            },
        ),
        migrations.CreateModel(
            name='ClientSport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'client_sport',
            },
        ),
        migrations.CreateModel(
            name='Emplacement',
            fields=[
                ('num_emplacement', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'emplacement',
            },
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id_employe', models.AutoField(primary_key=True, serialize=False)),
                ('nom_employe', models.CharField(max_length=30)),
                ('prenom_employe', models.CharField(max_length=30)),
                ('activite', models.CharField(max_length=30)),
                ('adresse_employe', models.CharField(max_length=30)),
                ('telephone', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=30)),
                ('salaire', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'db_table': 'employe',
            },
        ),
        migrations.CreateModel(
            name='Facture',
            fields=[
                ('num_facture', models.AutoField(primary_key=True, serialize=False)),
                ('date_emission', models.DateField()),
            ],
            options={
                'db_table': 'facture',
            },
        ),
        migrations.CreateModel(
            name='Fidelite',
            fields=[
                ('point_fidelite', models.IntegerField(primary_key=True, serialize=False)),
                ('reduc_fidelite', models.IntegerField()),
            ],
            options={
                'db_table': 'fidelite',
            },
        ),
        migrations.CreateModel(
            name='Intervenant',
            fields=[
                ('id_intervenant', models.AutoField(primary_key=True, serialize=False)),
                ('nom_intervenant', models.CharField(max_length=30)),
                ('prenom_intervenant', models.CharField(max_length=30)),
                ('salaire', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
            options={
                'db_table': 'intervenant',
            },
        ),
        migrations.CreateModel(
            name='Karaoke',
            fields=[
                ('ref_salle', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('tarif_karaoke', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
            options={
                'db_table': 'karaoke',
            },
        ),
        migrations.CreateModel(
            name='Materiel',
            fields=[
                ('nom_materiel', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('qte_materiel', models.IntegerField()),
            ],
            options={
                'db_table': 'materiel',
            },
        ),
        migrations.CreateModel(
            name='OptionLocation',
            fields=[
                ('option_location', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('remise_option', models.IntegerField()),
            ],
            options={
                'db_table': 'option_location',
            },
        ),
        migrations.CreateModel(
            name='ProduitSuperette',
            fields=[
                ('ref_produit', models.AutoField(primary_key=True, serialize=False)),
                ('nom_produit', models.CharField(max_length=30)),
                ('prix_produit', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
            options={
                'db_table': 'produit_superette',
            },
        ),
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('id_profil', models.AutoField(primary_key=True, serialize=False)),
                ('nom_client', models.CharField(max_length=30)),
                ('prenom_client', models.CharField(max_length=30)),
                ('adresse', models.CharField(max_length=50)),
                ('telephone', models.IntegerField()),
                ('date_de_naissance', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'profil',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('num_reservation', models.AutoField(primary_key=True, serialize=False)),
                ('nb_personnes', models.IntegerField()),
                ('acompte', models.IntegerField()),
                ('reglement', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reglement_bool', models.BooleanField(default=False)),
                ('date_reservation', models.DateField()),
                ('debut_sejour', models.DateField()),
                ('fin_sejour', models.DateField()),
                ('annulation', models.BooleanField(default=False)),
                ('presence', models.BooleanField(default=False)),
                ('option_location', models.ForeignKey(db_column='option_location', on_delete=django.db.models.deletion.CASCADE, to='camping.optionlocation')),
            ],
            options={
                'db_table': 'reservation',
            },
        ),
        migrations.CreateModel(
            name='Saison',
            fields=[
                ('code_saison', models.AutoField(primary_key=True, serialize=False)),
                ('libelle_saison', models.CharField(max_length=30)),
                ('date_com', models.DateField()),
                ('date_fin', models.DateField()),
                ('coef_majoration', models.IntegerField()),
            ],
            options={
                'db_table': 'saison',
            },
        ),
        migrations.CreateModel(
            name='SalleDesJeux',
            fields=[
                ('ref_jeu', models.AutoField(primary_key=True, serialize=False)),
                ('nom_jeu', models.CharField(max_length=30)),
                ('prix_jeu', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
            options={
                'db_table': 'salle_des_jeux',
            },
        ),
        migrations.CreateModel(
            name='ServicesProposes',
            fields=[
                ('nom_service', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=500)),
                ('prix_suplement', models.IntegerField()),
            ],
            options={
                'db_table': 'services_proposes',
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('nom_sport', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('tarif_unite', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'sport',
            },
        ),
        migrations.CreateModel(
            name='TypeEmplacement',
            fields=[
                ('type_emplacement', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('nb_personnes_max', models.IntegerField()),
                ('prix_journee', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'type_emplacement',
            },
        ),
        migrations.CreateModel(
            name='SportMateriel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_materiel', models.ForeignKey(db_column='nom_materiel', on_delete=django.db.models.deletion.CASCADE, to='camping.materiel')),
                ('nom_sport', models.ForeignKey(db_column='nom_sport', on_delete=django.db.models.deletion.CASCADE, to='camping.sport')),
            ],
            options={
                'db_table': 'sport_materiel',
            },
        ),
        migrations.CreateModel(
            name='SportIntervenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_intervenant', models.ForeignKey(db_column='id_intervenant', on_delete=django.db.models.deletion.CASCADE, to='camping.intervenant')),
                ('nom_sport', models.ForeignKey(db_column='nom_sport', on_delete=django.db.models.deletion.CASCADE, to='camping.sport')),
            ],
            options={
                'db_table': 'sport_intervenant',
            },
        ),
        migrations.CreateModel(
            name='ReservationServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_reservation', models.ForeignKey(db_column='num_reservation', on_delete=django.db.models.deletion.CASCADE, to='camping.reservation')),
                ('services_proposes', models.ForeignKey(db_column='services_proposes', on_delete=django.db.models.deletion.CASCADE, to='camping.servicesproposes')),
            ],
            options={
                'db_table': 'reservation_services',
            },
        ),
        migrations.CreateModel(
            name='ReservationSaison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_saison', models.ForeignKey(db_column='code_saison', on_delete=django.db.models.deletion.CASCADE, to='camping.saison')),
                ('num_reservation', models.ForeignKey(db_column='num_reservation', on_delete=django.db.models.deletion.CASCADE, to='camping.reservation')),
            ],
            options={
                'db_table': 'resevation_saison',
            },
        ),
        migrations.AddField(
            model_name='reservation',
            name='type_emplacement',
            field=models.ForeignKey(db_column='type_emplacement', on_delete=django.db.models.deletion.CASCADE, to='camping.typeemplacement'),
        ),
        migrations.AddConstraint(
            model_name='profil',
            constraint=models.CheckConstraint(check=models.Q(('telephone__gte', 100000000), ('telephone__lt', 1000000000)), name='tel_digits'),
        ),
        migrations.AddConstraint(
            model_name='profil',
            constraint=models.CheckConstraint(check=models.Q(date_de_naissance__lte=datetime.date(2002, 12, 13)), name='age18ans'),
        ),
        migrations.AddConstraint(
            model_name='profil',
            constraint=models.UniqueConstraint(fields=('email',), name='email unique'),
        ),
        migrations.AddField(
            model_name='facture',
            name='id_employe',
            field=models.ForeignKey(db_column='id_employe', on_delete=django.db.models.deletion.CASCADE, to='camping.employe'),
        ),
        migrations.AddField(
            model_name='facture',
            name='num_reservation',
            field=models.ForeignKey(db_column='num_reservation', on_delete=django.db.models.deletion.CASCADE, to='camping.reservation'),
        ),
        migrations.AddField(
            model_name='emplacement',
            name='type_emplacement',
            field=models.ForeignKey(db_column='type_emplacement', on_delete=django.db.models.deletion.CASCADE, to='camping.typeemplacement'),
        ),
        migrations.AddField(
            model_name='clientsport',
            name='nom_sport',
            field=models.ForeignKey(db_column='nom_sport', on_delete=django.db.models.deletion.CASCADE, to='camping.sport'),
        ),
        migrations.AddField(
            model_name='clientsport',
            name='num_client',
            field=models.ForeignKey(db_column='num_client', on_delete=django.db.models.deletion.CASCADE, to='camping.client'),
        ),
        migrations.AddField(
            model_name='clientsalledesjeux',
            name='num_client',
            field=models.ForeignKey(db_column='num_client', on_delete=django.db.models.deletion.CASCADE, to='camping.client'),
        ),
        migrations.AddField(
            model_name='clientsalledesjeux',
            name='ref_jeu',
            field=models.ForeignKey(db_column='ref_jeu', on_delete=django.db.models.deletion.CASCADE, to='camping.salledesjeux'),
        ),
        migrations.AddField(
            model_name='clientproduitsuperette',
            name='num_client',
            field=models.ForeignKey(db_column='num_client', on_delete=django.db.models.deletion.CASCADE, to='camping.client'),
        ),
        migrations.AddField(
            model_name='clientproduitsuperette',
            name='ref_produit',
            field=models.ForeignKey(db_column='ref_produit', on_delete=django.db.models.deletion.CASCADE, to='camping.produitsuperette'),
        ),
        migrations.AddField(
            model_name='clientkaraoke',
            name='num_client',
            field=models.ForeignKey(db_column='num_client', on_delete=django.db.models.deletion.CASCADE, to='camping.client'),
        ),
        migrations.AddField(
            model_name='clientkaraoke',
            name='ref_salle',
            field=models.ForeignKey(db_column='ref_salle', on_delete=django.db.models.deletion.CASCADE, to='camping.karaoke'),
        ),
        migrations.AddField(
            model_name='clientcafebar',
            name='num_client',
            field=models.ForeignKey(db_column='num_client', on_delete=django.db.models.deletion.CASCADE, to='camping.client'),
        ),
        migrations.AddField(
            model_name='clientcafebar',
            name='ref_conso',
            field=models.ForeignKey(db_column='ref_conso', on_delete=django.db.models.deletion.CASCADE, to='camping.cafebar'),
        ),
        migrations.AddField(
            model_name='client',
            name='num_emplacement',
            field=models.ForeignKey(db_column='num_emplacement', on_delete=django.db.models.deletion.CASCADE, to='camping.emplacement'),
        ),
        migrations.AddField(
            model_name='client',
            name='num_reservation',
            field=models.ForeignKey(db_column='num_reservation', on_delete=django.db.models.deletion.CASCADE, to='camping.reservation'),
        ),
        migrations.AlterUniqueTogether(
            name='sportmateriel',
            unique_together={('nom_materiel', 'nom_sport')},
        ),
        migrations.AlterUniqueTogether(
            name='sportintervenant',
            unique_together={('nom_sport', 'id_intervenant')},
        ),
        migrations.AlterUniqueTogether(
            name='reservationservices',
            unique_together={('num_reservation', 'services_proposes')},
        ),
        migrations.AlterUniqueTogether(
            name='reservationsaison',
            unique_together={('code_saison', 'num_reservation')},
        ),
        migrations.AlterUniqueTogether(
            name='clientsport',
            unique_together={('nom_sport', 'num_client')},
        ),
        migrations.AlterUniqueTogether(
            name='clientsalledesjeux',
            unique_together={('num_client', 'ref_jeu')},
        ),
        migrations.AlterUniqueTogether(
            name='clientproduitsuperette',
            unique_together={('num_client', 'ref_produit')},
        ),
        migrations.AlterUniqueTogether(
            name='clientkaraoke',
            unique_together={('num_client', 'ref_salle')},
        ),
        migrations.AlterUniqueTogether(
            name='clientcafebar',
            unique_together={('num_client', 'ref_conso')},
        ),
    ]
